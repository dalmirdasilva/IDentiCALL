package view;

import entity.City;
import entity.Customer;
import helper.AppProperties;
import helper.Formater;
import identicall.CustomerSearcher;
import audiorecord.VoiceRecorderFactory;
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.io.IOException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.TreeMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;

public class MainWindow extends javax.swing.JFrame {

    final private static int PHONE_SEARCH_TYPE_INDEX = 0;
    final private static int CPFCNPJ_SEARCH_TYPE_INDEX = 1;
    final private static int NAME_SEARCH_TYPE_INDEX = 2;
    final private static int MAX_RECENT_CALLS_TO_SHOW = 20;
    final private static int MINIMUM_SEARCH_CHARS = 3;
    final private static String MESSAGE_CLIENT_FOUND = "%s cliente(s) encontrado(s).";
    final private static String MESSAGE_MINIMUM_SEARCH_CHARS = "Preencha o campo.";
    final private static String ICON_FILE_PATH_PROPERTY = "iconfilepath";
    private final CustomerSearcher customerSearcher;
    private TreeMap<String, Customer> recentCallers;
    private Thread recortTimerThread;
    private List<Customer> lastSearchResult;
    private int currentSearchResultIndex;

    static {
        String OS = System.getProperty("os.name").toLowerCase();
        String preferredLookAndFeel = "";
        if (OS.indexOf("win") >= 0) {
            preferredLookAndFeel = "Windows";
        } else {
            preferredLookAndFeel = "GTK+";
        }

        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if (info.getName().startsWith(preferredLookAndFeel)) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
    }

    /**
     * Creates new form MainWindow
     *
     * @param customerSearcher
     */
    public MainWindow(CustomerSearcher customerSearcher) {
        initComponents();
        setIconAndTitle();
        hidePaginationElements();
        this.customerSearcher = customerSearcher;
        this.recentCallers = new TreeMap<>();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        headerPanel = new javax.swing.JPanel();
        rightPanel = new javax.swing.JPanel();
        projectDescriptionLabel = new javax.swing.JLabel();
        projectLabel = new javax.swing.JLabel();
        versionLabel = new javax.swing.JLabel();
        leftPanel = new javax.swing.JPanel();
        recordFixedLabel = new javax.swing.JLabel();
        recordButton = new javax.swing.JButton();
        recordTimeLabel = new javax.swing.JLabel();
        recordStatusLabel = new javax.swing.JLabel();
        rightSidePanel = new javax.swing.JPanel();
        incomingCallHeaderPanel = new javax.swing.JPanel();
        incomingCallLabel = new javax.swing.JLabel();
        incomingCallMainPanel = new javax.swing.JPanel();
        incomingCallScrollPane = new javax.swing.JScrollPane();
        incomingCallList = new javax.swing.JList();
        bodyPanel = new javax.swing.JPanel();
        searchPanel = new javax.swing.JPanel();
        searchLabel = new javax.swing.JLabel();
        searchMessageLabel = new javax.swing.JLabel();
        searchTextField = new javax.swing.JTextField();
        searchComboBox = new javax.swing.JComboBox();
        searchButton = new javax.swing.JButton();
        previousButton = new javax.swing.JButton();
        nextButton = new javax.swing.JButton();
        currentSearchViewingIndexLabel = new javax.swing.JLabel();
        formPanel = new javax.swing.JPanel();
        nameLabel = new javax.swing.JTextField();
        cpfCnpjLabelFixed = new javax.swing.JLabel();
        cpfCnpjLabel = new javax.swing.JTextField();
        residentialPhoneLavelFixed = new javax.swing.JLabel();
        residentialPhoneLabel = new javax.swing.JTextField();
        faxLabelFixed = new javax.swing.JLabel();
        faxLabel = new javax.swing.JTextField();
        cellPhoneLabelFixed = new javax.swing.JLabel();
        cellPhoneLabel = new javax.swing.JTextField();
        emailLabelFixed = new javax.swing.JLabel();
        emailLabel = new javax.swing.JTextField();
        corporateNameLabelFixed = new javax.swing.JLabel();
        corporateNameLabel = new javax.swing.JTextField();
        cityLabelFixed = new javax.swing.JLabel();
        cityLabel = new javax.swing.JTextField();
        districtLabelFixed = new javax.swing.JLabel();
        districtLabel = new javax.swing.JTextField();
        addressLabelFixed = new javax.swing.JLabel();
        addressLabel = new javax.swing.JTextField();
        primaryBusinessPhoneLabelFixed = new javax.swing.JLabel();
        primaryBusinessPhoneLabel = new javax.swing.JTextField();
        birthDateLabelFixed = new javax.swing.JLabel();
        birthDateLabel = new javax.swing.JTextField();
        legalPersonLavelFixed = new javax.swing.JLabel();
        legalPersonLabel = new javax.swing.JTextField();
        recordLabelFixed = new javax.swing.JLabel();
        recordDateLabel = new javax.swing.JTextField();
        postLabelFixed = new javax.swing.JLabel();
        postLabel = new javax.swing.JTextField();
        problemsLabelFixed = new javax.swing.JLabel();
        problemsLabel = new javax.swing.JTextField();
        observationLabelFixed = new javax.swing.JLabel();
        observationScrollPannel = new javax.swing.JScrollPane();
        observationTextPane = new javax.swing.JTextPane();
        stateAbbreviationLabelFixed = new javax.swing.JLabel();
        stateAbbreviationLabel = new javax.swing.JTextField();
        municipalityLabelFixed = new javax.swing.JLabel();
        municipalityLabel = new javax.swing.JTextField();
        secondaryBusinessPhoneLabelFixed = new javax.swing.JLabel();
        secondaryBusinessPhoneLabel = new javax.swing.JTextField();
        incomingCallDetailsFixed = new javax.swing.JLabel();
        incomingCallDetails = new javax.swing.JTextField();
        menuBar = new javax.swing.JMenuBar();
        fileMenuItem = new javax.swing.JMenu();
        autoRecordMenuItem = new javax.swing.JMenuItem();
        exitMenuItem = new javax.swing.JMenuItem();
        helpMenu = new javax.swing.JMenu();
        aboutMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        headerPanel.setBackground(new java.awt.Color(201, 208, 209));
        headerPanel.setLayout(new java.awt.BorderLayout());

        rightPanel.setPreferredSize(new java.awt.Dimension(550, 50));

        projectDescriptionLabel.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        projectDescriptionLabel.setForeground(new java.awt.Color(103, 103, 103));
        projectDescriptionLabel.setText("Identificação de chamadas");

        projectLabel.setFont(new java.awt.Font("Ubuntu", 1, 30)); // NOI18N
        projectLabel.setForeground(new java.awt.Color(103, 103, 103));
        projectLabel.setText("IDentiCALL");

        versionLabel.setFont(new java.awt.Font("DejaVu Sans", 0, 10)); // NOI18N
        versionLabel.setText("BETA");

        javax.swing.GroupLayout rightPanelLayout = new javax.swing.GroupLayout(rightPanel);
        rightPanel.setLayout(rightPanelLayout);
        rightPanelLayout.setHorizontalGroup(
            rightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, rightPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(projectLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(projectDescriptionLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(versionLabel)
                .addContainerGap(97, Short.MAX_VALUE))
        );
        rightPanelLayout.setVerticalGroup(
            rightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rightPanelLayout.createSequentialGroup()
                .addGroup(rightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(rightPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(rightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(projectDescriptionLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(versionLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(11, 11, 11))
                    .addComponent(projectLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        headerPanel.add(rightPanel, java.awt.BorderLayout.LINE_START);

        leftPanel.setPreferredSize(new java.awt.Dimension(500, 50));

        recordFixedLabel.setText("Status da gravação:");
        recordFixedLabel.setToolTipText("");

        recordButton.setText("Parar gravação");
        recordButton.setEnabled(false);
        recordButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                recordButtonActionPerformed(evt);
            }
        });

        recordTimeLabel.setText("00h00m00s");

        recordStatusLabel.setBackground(new java.awt.Color(205, 187, 203));
        recordStatusLabel.setText("Parado");

        javax.swing.GroupLayout leftPanelLayout = new javax.swing.GroupLayout(leftPanel);
        leftPanel.setLayout(leftPanelLayout);
        leftPanelLayout.setHorizontalGroup(
            leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(leftPanelLayout.createSequentialGroup()
                .addContainerGap(137, Short.MAX_VALUE)
                .addComponent(recordFixedLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(recordStatusLabel)
                .addGap(10, 10, 10)
                .addComponent(recordButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(recordTimeLabel)
                .addGap(18, 18, 18))
        );
        leftPanelLayout.setVerticalGroup(
            leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, leftPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(recordFixedLabel)
                    .addComponent(recordButton)
                    .addComponent(recordTimeLabel)
                    .addComponent(recordStatusLabel))
                .addContainerGap())
        );

        headerPanel.add(leftPanel, java.awt.BorderLayout.CENTER);

        getContentPane().add(headerPanel, java.awt.BorderLayout.PAGE_START);

        rightSidePanel.setMaximumSize(new java.awt.Dimension(270, 445));
        rightSidePanel.setPreferredSize(new java.awt.Dimension(280, 445));
        rightSidePanel.setRequestFocusEnabled(false);
        rightSidePanel.setLayout(new java.awt.BorderLayout());

        incomingCallHeaderPanel.setBackground(new java.awt.Color(232, 232, 232));

        incomingCallLabel.setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N
        incomingCallLabel.setText("Ligações recentes");

        javax.swing.GroupLayout incomingCallHeaderPanelLayout = new javax.swing.GroupLayout(incomingCallHeaderPanel);
        incomingCallHeaderPanel.setLayout(incomingCallHeaderPanelLayout);
        incomingCallHeaderPanelLayout.setHorizontalGroup(
            incomingCallHeaderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(incomingCallHeaderPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(incomingCallLabel)
                .addContainerGap(139, Short.MAX_VALUE))
        );
        incomingCallHeaderPanelLayout.setVerticalGroup(
            incomingCallHeaderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(incomingCallLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
        );

        rightSidePanel.add(incomingCallHeaderPanel, java.awt.BorderLayout.PAGE_START);

        incomingCallMainPanel.setPreferredSize(new java.awt.Dimension(270, 485));

        incomingCallScrollPane.setPreferredSize(new java.awt.Dimension(270, 445));

        incomingCallList.setBackground(new java.awt.Color(178, 171, 171));
        incomingCallList.setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N
        incomingCallList.setToolTipText("");
        incomingCallList.setPreferredSize(new java.awt.Dimension(200, 26));
        incomingCallList.setSelectionBackground(new java.awt.Color(80, 80, 80));
        incomingCallList.setSelectionForeground(new java.awt.Color(254, 254, 254));
        incomingCallList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                incomingCallListMouseClicked(evt);
            }
        });
        incomingCallScrollPane.setViewportView(incomingCallList);

        javax.swing.GroupLayout incomingCallMainPanelLayout = new javax.swing.GroupLayout(incomingCallMainPanel);
        incomingCallMainPanel.setLayout(incomingCallMainPanelLayout);
        incomingCallMainPanelLayout.setHorizontalGroup(
            incomingCallMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(incomingCallScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 280, Short.MAX_VALUE)
        );
        incomingCallMainPanelLayout.setVerticalGroup(
            incomingCallMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(incomingCallScrollPane, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 528, Short.MAX_VALUE)
        );

        rightSidePanel.add(incomingCallMainPanel, java.awt.BorderLayout.CENTER);

        getContentPane().add(rightSidePanel, java.awt.BorderLayout.LINE_END);

        bodyPanel.setBackground(new java.awt.Color(255, 255, 255));
        bodyPanel.setPreferredSize(new java.awt.Dimension(770, 554));
        bodyPanel.setLayout(new java.awt.BorderLayout());

        searchPanel.setBackground(new java.awt.Color(195, 217, 255));
        searchPanel.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        searchPanel.setPreferredSize(new java.awt.Dimension(638, 35));

        searchLabel.setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N
        searchLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        searchLabel.setText("Pesquisar:");

        searchMessageLabel.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        searchMessageLabel.setText(" ");

        searchTextField.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        searchTextField.setPreferredSize(new java.awt.Dimension(73, 25));
        searchTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                searchTextFieldKeyPressed(evt);
            }
        });

        searchComboBox.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        searchComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Telefone", "CPF/CNPF", "Nome" }));
        searchComboBox.setPreferredSize(new java.awt.Dimension(73, 25));

        searchButton.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        searchButton.setText("Pesquisar");
        searchButton.setPreferredSize(new java.awt.Dimension(73, 27));
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        previousButton.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        previousButton.setText("<");
        previousButton.setPreferredSize(new java.awt.Dimension(73, 27));
        previousButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                previousButtonActionPerformed(evt);
            }
        });

        nextButton.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        nextButton.setText(">");
        nextButton.setPreferredSize(new java.awt.Dimension(73, 27));
        nextButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextButtonActionPerformed(evt);
            }
        });

        currentSearchViewingIndexLabel.setText("00/00");
        currentSearchViewingIndexLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout searchPanelLayout = new javax.swing.GroupLayout(searchPanel);
        searchPanel.setLayout(searchPanelLayout);
        searchPanelLayout.setHorizontalGroup(
            searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchPanelLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(searchLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(searchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(searchComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(searchMessageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 90, Short.MAX_VALUE)
                .addComponent(previousButton, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(currentSearchViewingIndexLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nextButton, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        searchPanelLayout.setVerticalGroup(
            searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(searchLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(searchMessageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(searchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(searchComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(previousButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(nextButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(currentSearchViewingIndexLabel))
        );

        bodyPanel.add(searchPanel, java.awt.BorderLayout.PAGE_START);

        formPanel.setBackground(new java.awt.Color(254, 254, 254));

        nameLabel.setEditable(false);
        nameLabel.setFont(new java.awt.Font("Ubuntu", 0, 36)); // NOI18N
        nameLabel.setText("<Cliente não econtrado>");

        cpfCnpjLabelFixed.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        cpfCnpjLabelFixed.setText("CPF/CNPJ:");

        cpfCnpjLabel.setEditable(false);
        cpfCnpjLabel.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        cpfCnpjLabel.setText("--------- --");

        residentialPhoneLavelFixed.setFont(new java.awt.Font("Ubuntu", 1, 16)); // NOI18N
        residentialPhoneLavelFixed.setText("Fone Residencial:");

        residentialPhoneLabel.setEditable(false);
        residentialPhoneLabel.setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N
        residentialPhoneLabel.setText("(--) --------");

        faxLabelFixed.setFont(new java.awt.Font("Ubuntu", 1, 16)); // NOI18N
        faxLabelFixed.setText("Fax:");

        faxLabel.setEditable(false);
        faxLabel.setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N
        faxLabel.setText("(--) --------");

        cellPhoneLabelFixed.setFont(new java.awt.Font("Ubuntu", 1, 16)); // NOI18N
        cellPhoneLabelFixed.setText("Celular:");

        cellPhoneLabel.setEditable(false);
        cellPhoneLabel.setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N
        cellPhoneLabel.setText("(--) --------");

        emailLabelFixed.setFont(new java.awt.Font("Ubuntu", 1, 16)); // NOI18N
        emailLabelFixed.setText("Email:");

        emailLabel.setEditable(false);
        emailLabel.setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N
        emailLabel.setText("---");

        corporateNameLabelFixed.setFont(new java.awt.Font("Ubuntu", 1, 16)); // NOI18N
        corporateNameLabelFixed.setText("Razão Social:");

        corporateNameLabel.setEditable(false);
        corporateNameLabel.setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N
        corporateNameLabel.setText("---");

        cityLabelFixed.setFont(new java.awt.Font("Ubuntu", 1, 16)); // NOI18N
        cityLabelFixed.setText("Cidade:");

        cityLabel.setEditable(false);
        cityLabel.setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N
        cityLabel.setText("---");

        districtLabelFixed.setFont(new java.awt.Font("Ubuntu", 1, 16)); // NOI18N
        districtLabelFixed.setText("Bairro:");

        districtLabel.setEditable(false);
        districtLabel.setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N
        districtLabel.setText("---");

        addressLabelFixed.setFont(new java.awt.Font("Ubuntu", 1, 16)); // NOI18N
        addressLabelFixed.setText("Endereço:");

        addressLabel.setEditable(false);
        addressLabel.setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N
        addressLabel.setText("---");

        primaryBusinessPhoneLabelFixed.setFont(new java.awt.Font("Ubuntu", 1, 16)); // NOI18N
        primaryBusinessPhoneLabelFixed.setText("Fone Comecial 1:");

        primaryBusinessPhoneLabel.setEditable(false);
        primaryBusinessPhoneLabel.setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N
        primaryBusinessPhoneLabel.setText("(--) --------");

        birthDateLabelFixed.setFont(new java.awt.Font("Ubuntu", 1, 16)); // NOI18N
        birthDateLabelFixed.setText("Nascimento:");

        birthDateLabel.setEditable(false);
        birthDateLabel.setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N
        birthDateLabel.setText("--/--/----");

        legalPersonLavelFixed.setFont(new java.awt.Font("Ubuntu", 1, 16)); // NOI18N
        legalPersonLavelFixed.setText("Pessoa:");

        legalPersonLabel.setEditable(false);
        legalPersonLabel.setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N
        legalPersonLabel.setText("---");

        recordLabelFixed.setFont(new java.awt.Font("Ubuntu", 1, 16)); // NOI18N
        recordLabelFixed.setText("Data Cadastro:");

        recordDateLabel.setEditable(false);
        recordDateLabel.setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N
        recordDateLabel.setText("--/--/----");

        postLabelFixed.setFont(new java.awt.Font("Ubuntu", 1, 16)); // NOI18N
        postLabelFixed.setText("Correio:");

        postLabel.setEditable(false);
        postLabel.setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N
        postLabel.setText("---");

        problemsLabelFixed.setFont(new java.awt.Font("Ubuntu", 1, 16)); // NOI18N
        problemsLabelFixed.setText("Problemas:");

        problemsLabel.setEditable(false);
        problemsLabel.setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N
        problemsLabel.setText("---");

        observationLabelFixed.setFont(new java.awt.Font("Ubuntu", 1, 16)); // NOI18N
        observationLabelFixed.setText("Observação:");

        observationTextPane.setEditable(false);
        observationTextPane.setBorder(null);
        observationTextPane.setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N
        observationTextPane.setText("---");
        observationScrollPannel.setViewportView(observationTextPane);

        stateAbbreviationLabelFixed.setFont(new java.awt.Font("Ubuntu", 1, 16)); // NOI18N
        stateAbbreviationLabelFixed.setText("Estado:");

        stateAbbreviationLabel.setEditable(false);
        stateAbbreviationLabel.setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N
        stateAbbreviationLabel.setText("--");

        municipalityLabelFixed.setFont(new java.awt.Font("Ubuntu", 1, 16)); // NOI18N
        municipalityLabelFixed.setText("Município:");

        municipalityLabel.setEditable(false);
        municipalityLabel.setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N
        municipalityLabel.setText("---");

        secondaryBusinessPhoneLabelFixed.setFont(new java.awt.Font("Ubuntu", 1, 16)); // NOI18N
        secondaryBusinessPhoneLabelFixed.setText("Fone Comecial 2:");

        secondaryBusinessPhoneLabel.setEditable(false);
        secondaryBusinessPhoneLabel.setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N
        secondaryBusinessPhoneLabel.setText("(--) --------");

        incomingCallDetailsFixed.setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N
        incomingCallDetailsFixed.setForeground(new java.awt.Color(135, 128, 128));
        incomingCallDetailsFixed.setText("Última ligação:");

        incomingCallDetails.setEditable(false);
        incomingCallDetails.setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N
        incomingCallDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                incomingCallDetailsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout formPanelLayout = new javax.swing.GroupLayout(formPanel);
        formPanel.setLayout(formPanelLayout);
        formPanelLayout.setHorizontalGroup(
            formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(formPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(observationScrollPannel)
                    .addComponent(nameLabel)
                    .addGroup(formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(observationLabelFixed)
                        .addGroup(formPanelLayout.createSequentialGroup()
                            .addGroup(formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, formPanelLayout.createSequentialGroup()
                                    .addComponent(cpfCnpjLabelFixed, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(cpfCnpjLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, formPanelLayout.createSequentialGroup()
                                    .addComponent(birthDateLabelFixed)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(birthDateLabel))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, formPanelLayout.createSequentialGroup()
                                    .addComponent(legalPersonLavelFixed)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(legalPersonLabel))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, formPanelLayout.createSequentialGroup()
                                    .addComponent(cellPhoneLabelFixed)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(cellPhoneLabel))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, formPanelLayout.createSequentialGroup()
                                    .addComponent(residentialPhoneLavelFixed)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(residentialPhoneLabel))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, formPanelLayout.createSequentialGroup()
                                    .addComponent(primaryBusinessPhoneLabelFixed)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(primaryBusinessPhoneLabel))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, formPanelLayout.createSequentialGroup()
                                    .addComponent(stateAbbreviationLabelFixed)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(stateAbbreviationLabel))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, formPanelLayout.createSequentialGroup()
                                    .addComponent(districtLabelFixed)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(districtLabel))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, formPanelLayout.createSequentialGroup()
                                    .addComponent(secondaryBusinessPhoneLabelFixed)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(secondaryBusinessPhoneLabel)))
                            .addGap(22, 22, 22)
                            .addGroup(formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, formPanelLayout.createSequentialGroup()
                                    .addComponent(faxLabelFixed)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(faxLabel))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, formPanelLayout.createSequentialGroup()
                                    .addComponent(incomingCallDetailsFixed)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(incomingCallDetails))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, formPanelLayout.createSequentialGroup()
                                    .addComponent(corporateNameLabelFixed)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(corporateNameLabel))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, formPanelLayout.createSequentialGroup()
                                    .addComponent(municipalityLabelFixed)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(municipalityLabel))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, formPanelLayout.createSequentialGroup()
                                    .addComponent(cityLabelFixed)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(cityLabel))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, formPanelLayout.createSequentialGroup()
                                    .addComponent(addressLabelFixed)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(addressLabel))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, formPanelLayout.createSequentialGroup()
                                    .addComponent(emailLabelFixed)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(emailLabel))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, formPanelLayout.createSequentialGroup()
                                    .addComponent(problemsLabelFixed)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(problemsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(postLabelFixed)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(postLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(0, 151, Short.MAX_VALUE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, formPanelLayout.createSequentialGroup()
                                    .addComponent(recordLabelFixed)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(recordDateLabel))))))
                .addContainerGap())
        );
        formPanelLayout.setVerticalGroup(
            formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(formPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(nameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cpfCnpjLabelFixed)
                    .addComponent(cpfCnpjLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(incomingCallDetailsFixed)
                    .addComponent(incomingCallDetails, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(faxLabelFixed)
                    .addComponent(faxLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cellPhoneLabelFixed)
                    .addComponent(cellPhoneLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(emailLabelFixed)
                    .addComponent(emailLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(residentialPhoneLavelFixed)
                    .addComponent(residentialPhoneLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addressLabelFixed)
                    .addComponent(addressLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(primaryBusinessPhoneLabelFixed)
                    .addComponent(primaryBusinessPhoneLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cityLabelFixed)
                    .addComponent(cityLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(secondaryBusinessPhoneLabelFixed)
                    .addComponent(secondaryBusinessPhoneLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(municipalityLabelFixed)
                        .addComponent(municipalityLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(districtLabelFixed))
                    .addComponent(districtLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(corporateNameLabelFixed)
                    .addComponent(corporateNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(stateAbbreviationLabelFixed)
                    .addComponent(stateAbbreviationLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(birthDateLabelFixed)
                    .addComponent(birthDateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(recordLabelFixed)
                    .addComponent(recordDateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(legalPersonLavelFixed)
                    .addComponent(legalPersonLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(problemsLabelFixed)
                    .addComponent(problemsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(postLabelFixed)
                    .addComponent(postLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(observationLabelFixed)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(observationScrollPannel, javax.swing.GroupLayout.DEFAULT_SIZE, 56, Short.MAX_VALUE)
                .addContainerGap())
        );

        bodyPanel.add(formPanel, java.awt.BorderLayout.CENTER);

        getContentPane().add(bodyPanel, java.awt.BorderLayout.CENTER);

        fileMenuItem.setText("Arquivo");
        fileMenuItem.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N

        autoRecordMenuItem.setText("Gravação Automática");
        autoRecordMenuItem.setToolTipText("");
        autoRecordMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                autoRecordMenuItemActionPerformed(evt);
            }
        });
        fileMenuItem.add(autoRecordMenuItem);

        exitMenuItem.setText("Sair");
        exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuItemActionPerformed(evt);
            }
        });
        fileMenuItem.add(exitMenuItem);

        menuBar.add(fileMenuItem);

        helpMenu.setText("Ajuda");
        helpMenu.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N

        aboutMenuItem.setText("Sobre");
        aboutMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutMenuItemActionPerformed(evt);
            }
        });
        helpMenu.add(aboutMenuItem);

        menuBar.add(helpMenu);

        setJMenuBar(menuBar);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        String searchText = searchTextField.getText();
        if (searchText.length() < MINIMUM_SEARCH_CHARS) {
            //searchMessageLabel.setText(MESSAGE_MINIMUM_SEARCH_CHARS);
            hidePaginationElements();
            return;
        }
        int selectedIndex = searchComboBox.getSelectedIndex();
        if (selectedIndex != NAME_SEARCH_TYPE_INDEX) {
            searchText = Formater.removeFormatation(searchText);
        }
        Map<String, String> properties = new HashMap<>();
        switch (selectedIndex) {
            case PHONE_SEARCH_TYPE_INDEX:
                properties.put(Customer.PRIMARY_BUSINESS_PHONE_COLUMN, searchText);
                properties.put(Customer.CELL_PHONE_COLUMN, searchText);
                properties.put(Customer.RESIDENTIAL_PHONE_COLUMN, searchText);
                break;
            case CPFCNPJ_SEARCH_TYPE_INDEX:
                properties.put(Customer.CPF_CNPJ_COLUMN, searchText);
                break;
            case NAME_SEARCH_TYPE_INDEX:
                properties.put(Customer.NAME_COLUMN, searchText);
                break;
        }
        lastSearchResult = customerSearcher.searchCustomer(properties, false);
        hidePaginationElements();
        currentSearchResultIndex = 0;
        if (lastSearchResult.size() == 0) {
            emptyCustomer();
        } else if (lastSearchResult.size() > 1) {
            showPaginationElements();
        }
    }//GEN-LAST:event_searchButtonActionPerformed

    private void hidePaginationElements() {
        previousButton.setVisible(false);
        currentSearchViewingIndexLabel.setVisible(false);
        nextButton.setVisible(false);
    }

    private void showPaginationElements() {
        previousButton.setVisible(true);
        currentSearchViewingIndexLabel.setVisible(true);
        currentSearchViewingIndexLabel.setText("00/00");
        nextButton.setVisible(true);
        setCurrentIndexLabel();
    }


    private void incomingCallListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_incomingCallListMouseClicked
        String selected = (String) incomingCallList.getSelectedValue();
        if (selected == null) {
            return;
        }
        Customer customer = recentCallers.get(selected);
        if (customer != null) {
            populateCustomer(customer);
        } else {
            emptyCustomer();
        }
    }//GEN-LAST:event_incomingCallListMouseClicked

    private void autoRecordMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_autoRecordMenuItemActionPerformed
        try {
            VoiceRecorderFactory.getInstance().toggleAutoRecording();
            updateUIRecordState();
        } catch (IOException ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, "Cannot toggle auto record.", ex);
        }
    }//GEN-LAST:event_autoRecordMenuItemActionPerformed

    private void recordButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_recordButtonActionPerformed
        try {
            VoiceRecorderFactory.getInstance().stopRecording();
            stopRecordTimer();
        } catch (IOException ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
        updateUIRecordState();
    }//GEN-LAST:event_recordButtonActionPerformed

    private void searchTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchTextFieldKeyPressed
        if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
            searchButtonActionPerformed(null);
        }
    }//GEN-LAST:event_searchTextFieldKeyPressed

    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed
        try {
            VoiceRecorderFactory.getInstance().stopRecording();
        } catch (IOException ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
        System.exit(0);
    }//GEN-LAST:event_exitMenuItemActionPerformed

    private void aboutMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutMenuItemActionPerformed
        new About().setVisible(true);
    }//GEN-LAST:event_aboutMenuItemActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        try {
            VoiceRecorderFactory.getInstance().stopRecording();
        } catch (IOException ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_formWindowClosing

    private void previousButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_previousButtonActionPerformed
        if (lastSearchResult != null) {
            currentSearchResultIndex = (currentSearchResultIndex - 1) % lastSearchResult.size();
            if (currentSearchResultIndex < 0) {
                currentSearchResultIndex = lastSearchResult.size() - 1;
            }
            populateCustomer(lastSearchResult.get(currentSearchResultIndex));
            setCurrentIndexLabel();
        }
    }//GEN-LAST:event_previousButtonActionPerformed

    private void nextButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextButtonActionPerformed
        if (lastSearchResult != null) {
            currentSearchResultIndex = (currentSearchResultIndex + 1) % lastSearchResult.size();
            populateCustomer(lastSearchResult.get(currentSearchResultIndex));
            setCurrentIndexLabel();
        }
    }//GEN-LAST:event_nextButtonActionPerformed

    private void incomingCallDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_incomingCallDetailsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_incomingCallDetailsActionPerformed

    private void setCurrentIndexLabel() {
        currentSearchViewingIndexLabel.setText(String.format("%02d", currentSearchResultIndex + 1) + "/" + String.format("%02d", lastSearchResult.size()));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem aboutMenuItem;
    private javax.swing.JTextField addressLabel;
    private javax.swing.JLabel addressLabelFixed;
    private javax.swing.JMenuItem autoRecordMenuItem;
    private javax.swing.JTextField birthDateLabel;
    private javax.swing.JLabel birthDateLabelFixed;
    private javax.swing.JPanel bodyPanel;
    private javax.swing.JTextField cellPhoneLabel;
    private javax.swing.JLabel cellPhoneLabelFixed;
    private javax.swing.JTextField cityLabel;
    private javax.swing.JLabel cityLabelFixed;
    private javax.swing.JTextField corporateNameLabel;
    private javax.swing.JLabel corporateNameLabelFixed;
    private javax.swing.JTextField cpfCnpjLabel;
    private javax.swing.JLabel cpfCnpjLabelFixed;
    private javax.swing.JLabel currentSearchViewingIndexLabel;
    private javax.swing.JTextField districtLabel;
    private javax.swing.JLabel districtLabelFixed;
    private javax.swing.JTextField emailLabel;
    private javax.swing.JLabel emailLabelFixed;
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JTextField faxLabel;
    private javax.swing.JLabel faxLabelFixed;
    private javax.swing.JMenu fileMenuItem;
    private javax.swing.JPanel formPanel;
    private javax.swing.JPanel headerPanel;
    private javax.swing.JMenu helpMenu;
    private javax.swing.JTextField incomingCallDetails;
    private javax.swing.JLabel incomingCallDetailsFixed;
    private javax.swing.JPanel incomingCallHeaderPanel;
    private javax.swing.JLabel incomingCallLabel;
    private javax.swing.JList incomingCallList;
    private javax.swing.JPanel incomingCallMainPanel;
    private javax.swing.JScrollPane incomingCallScrollPane;
    private javax.swing.JPanel leftPanel;
    private javax.swing.JTextField legalPersonLabel;
    private javax.swing.JLabel legalPersonLavelFixed;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JTextField municipalityLabel;
    private javax.swing.JLabel municipalityLabelFixed;
    private javax.swing.JTextField nameLabel;
    private javax.swing.JButton nextButton;
    private javax.swing.JLabel observationLabelFixed;
    private javax.swing.JScrollPane observationScrollPannel;
    private javax.swing.JTextPane observationTextPane;
    private javax.swing.JTextField postLabel;
    private javax.swing.JLabel postLabelFixed;
    private javax.swing.JButton previousButton;
    private javax.swing.JTextField primaryBusinessPhoneLabel;
    private javax.swing.JLabel primaryBusinessPhoneLabelFixed;
    private javax.swing.JTextField problemsLabel;
    private javax.swing.JLabel problemsLabelFixed;
    private javax.swing.JLabel projectDescriptionLabel;
    private javax.swing.JLabel projectLabel;
    private javax.swing.JButton recordButton;
    private javax.swing.JTextField recordDateLabel;
    private javax.swing.JLabel recordFixedLabel;
    private javax.swing.JLabel recordLabelFixed;
    private javax.swing.JLabel recordStatusLabel;
    private javax.swing.JLabel recordTimeLabel;
    private javax.swing.JTextField residentialPhoneLabel;
    private javax.swing.JLabel residentialPhoneLavelFixed;
    private javax.swing.JPanel rightPanel;
    private javax.swing.JPanel rightSidePanel;
    private javax.swing.JButton searchButton;
    private javax.swing.JComboBox searchComboBox;
    private javax.swing.JLabel searchLabel;
    private javax.swing.JLabel searchMessageLabel;
    private javax.swing.JPanel searchPanel;
    private javax.swing.JTextField searchTextField;
    private javax.swing.JTextField secondaryBusinessPhoneLabel;
    private javax.swing.JLabel secondaryBusinessPhoneLabelFixed;
    private javax.swing.JTextField stateAbbreviationLabel;
    private javax.swing.JLabel stateAbbreviationLabelFixed;
    private javax.swing.JLabel versionLabel;
    // End of variables declaration//GEN-END:variables

    public void populateCustomer(Customer customer) {
        City city = customer.getCity();
        nameLabel.setText(customer.getName());
        if (customer.getProblems() == 'S') {
            nameLabel.setForeground(Color.RED);
        } else {
            nameLabel.setForeground(Color.BLACK);
        }
        cpfCnpjLabel.setText(Formater.formatCpfCnpj(customer.getCpfCnpj()));
        residentialPhoneLabel.setText(Formater.formatPhone(customer.getResidentialPhone()));
        faxLabel.setText(Formater.formatPhone(customer.getFax()));
        cellPhoneLabel.setText(Formater.formatPhone(customer.getCellPhone()));
        emailLabel.setText(customer.getEmail());
        addressLabel.setText(customer.getAddress());
        districtLabel.setText(customer.getDistrict());
        cityLabel.setText((city != null) ? city.getMunicipality() : "");
        stateAbbreviationLabel.setText((city != null) ? city.getStateAbbreviation() : "");
        districtLabel.setText(customer.getDistrict());
        municipalityLabel.setText((city != null) ? city.getMunicipality() : "");
        primaryBusinessPhoneLabel.setText(Formater.formatPhone(customer.getPrimaryBusinessPhone()));
        secondaryBusinessPhoneLabel.setText(Formater.formatPhone(customer.getSecondaryBusinessPhone()));
        legalPersonLabel.setText(customer.getLegalPerson());
        corporateNameLabel.setText(customer.getCorporateName());
        birthDateLabel.setText(Formater.formatStringDate(customer.getBirthDate()));
        recordDateLabel.setText(Formater.formatStringDate(customer.getRecortDate()));
        postLabel.setText(String.valueOf(customer.getPost()));
        problemsLabel.setText(String.valueOf(customer.getProblems()));
        if (customer.getObservation() != null && customer.getObservation().contains("is not supported")) {
            customer.setObservation("-");
        }
        observationTextPane.setText(customer.getObservation());
    }

    public void emptyCustomer() {
        City city = new City();
        Customer customer = new Customer();
        customer.setCity(city);
        customer.setName("<Cliente não encontrado>");
        customer.setAddress("---");
        customer.setBirthDate("--/--/----");
        customer.setPrimaryBusinessPhone("----------");
        customer.setSecondaryBusinessPhone("----------");
        customer.setCellPhone("----------");
        customer.setCorporateName("---");
        customer.setCpfCnpj("---");
        customer.setDistrict("---");
        customer.setEmail("---");
        customer.setFax("----------");
        customer.setLegalPerson("---");
        city.setMunicipality("---");
        customer.setObservation("");
        customer.setPost('N');
        customer.setProblems('N');
        customer.setRecortDate("--/--/----");
        customer.setResidentialPhone("----------");
        city.setStateAbbreviation("---");
        populateCustomer(customer);
    }

    public void addRecentCaller(Customer caller, String recentCallText) {
        if (caller != null) {
            populateCustomer(caller);
        } else {
            emptyCustomer();
        }
        if (recentCallText != null) {
            incomingCallDetails.setText(recentCallText);
            recentCallers.put(recentCallText, caller);
            appendCallerList(recentCallText);
        } else {
            incomingCallDetails.setText("");
        }
        updateUIRecordState();
    }

    public void updateUIRecordState() {
        boolean buttonEnabled = false;
        String label = "Parado";
        if (VoiceRecorderFactory.getInstance().isRecording()) {
            buttonEnabled = true;
            label = "Gravando";
            startRecordTimer();
        } else {
            stopRecordTimer();
        }
        recordButton.setEnabled(buttonEnabled);
        recordStatusLabel.setText(label);
    }

    public void stopRecordTimer() {

        if (recortTimerThread != null) {
            recortTimerThread.interrupt();
        }
        recordTimeLabel.setText("00h00m00s");
    }

    public void startRecordTimer() {

        stopRecordTimer();
        recortTimerThread = new Thread() {
            private int timer = 0;

            @Override
            public void run() {

                while (!interrupted()) {
                    try {
                        timer++;
                        int seconds = timer % 60;
                        int minutes = (int) (timer / 60) % 60;
                        int hours = (int) (timer / 60 / 24) % 24;
                        recordTimeLabel.setText(String.format("%02dh%02dm%02ds", hours, minutes, seconds));
                        Thread.sleep(1000);
                    } catch (InterruptedException ex) {
                        Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
                        Thread.currentThread().interrupt();

                    }
                }
            }
        };
        recortTimerThread.start();
    }

    public void appendCallerList(String text) {

        DefaultListModel listModel = new DefaultListModel();
        listModel.addElement(text);
        int max = Math.min(MAX_RECENT_CALLS_TO_SHOW, incomingCallList.getModel().getSize());
        for (int i = 0; i < max; i++) {
            listModel.addElement(incomingCallList.getModel().getElementAt(i));
        }
        incomingCallList.setModel(listModel);
        incomingCallList.setSelectedIndex(0);
        if (recentCallers.size() > MAX_RECENT_CALLS_TO_SHOW) {
            // recentCallers.pollLastEntry();
        }
        System.out.println("recentCallers.size :" + recentCallers.size());
    }

    private void setIconAndTitle() {
        try {
            String iconFilePath = AppProperties.getProperty(ICON_FILE_PATH_PROPERTY);
            ImageIcon imageIcon = new ImageIcon(iconFilePath);
            setIconImage(imageIcon.getImage());
            setTitle("IDentiCALL");
        } catch (IOException ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
